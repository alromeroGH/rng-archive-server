package com.alerom.rng.archive.rng_archive_server.mappers;

import com.alerom.rng.archive.rng_archive_server.dto.request.create.ArtifactSetCreateDTO;
import com.alerom.rng.archive.rng_archive_server.dto.request.update.ArtifactSetUpdateDTO;
import com.alerom.rng.archive.rng_archive_server.dto.response.ArtifactSetResponseDTO;
import com.alerom.rng.archive.rng_archive_server.models.ArtifactSet;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.MappingTarget;

/**
 * Mapper interface for converting between ArtifactSet entity and DTOs.
 * This interface is processed by MapStruct to generate an implementation at compile time.
 */
@Mapper(componentModel = "spring")
public interface ArtifactSetMapper {

    /**
     * Converts an {@link ArtifactSetCreateDTO} to an {@link ArtifactSet} entity.
     * The 'id' field is ignored as it is generated by the database.
     *
     * @param artifactSetCreateDTO The DTO containing the data for the new artifact set.
     * @return The new ArtifactSet entity.
     */
    @Mapping(target = "id", ignore = true)
    ArtifactSet toEntity(ArtifactSetCreateDTO artifactSetCreateDTO);

    /**
     * Converts an {@link ArtifactSet} entity to an {@link ArtifactSetResponseDTO}.
     *
     * @param artifactSet The ArtifactSet entity to convert.
     * @return The corresponding ArtifactSetResponseDTO.
     */
    @Mapping(target = "setImage", expression = "java(\"http://localhost:8080/images/images_artifacts/\" + artifactSet.getSetImage())")
    ArtifactSetResponseDTO toResponseDTO(ArtifactSet artifactSet);

    /**
     * Updates an existing {@link ArtifactSet} entity with data from an {@link ArtifactSetUpdateDTO}.
     * The 'id' field is ignored during the update process.
     *
     * @param artifactSet The existing ArtifactSet entity to be updated.
     * @param artifactSetUpdateDTO The DTO containing the updated data.
     */
    @Mapping(target = "id", ignore = true)
    void updateEntityFromDTO(@MappingTarget ArtifactSet artifactSet, ArtifactSetUpdateDTO artifactSetUpdateDTO);
}